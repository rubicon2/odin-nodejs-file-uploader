@use './util.scss';
@use './elements.scss';

// Sass variables for breakpoints so they can be used in media queries.
$desktop-breakpoint: 460px;

:root {
  --main-color: #4455ee;
  --off-white: #eeeeee;
  --grey: #aaaaaa55;
  --off-black: #222222;
  --error: #cc2222;
  --error-transparent: #cc222244;
  --shadow: #22222211;
  --main-text-color: var(--off-black);
  --std-border-radius: 5px;
  --std-padding: 1rem;
  font-family: 'Open Sans', Arial, Helvetica, sans-serif;
  color: var(--main-text-color);
}

// Reusable utility classes.
.container {
  max-width: 960px;
  margin: 0 auto;
  padding: 0 1rem;
}

.std-padding-v {
  padding-top: var(--std-padding);
  padding-bottom: var(--std-padding);
}

.std-padding-top {
  padding-top: var(--std-padding);
}

.std-padding-bottom {
  padding-bottom: var(--std-padding);
}

.std-form {
  max-width: 480px;
}

.invalid-input {
  background-color: var(--error-transparent);
}

.invalid-input__icon {
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  padding: 2px;
}

.form-row {
  display: grid;
  // For spacing out form rows without just making the form a grid, which introduces other problems to solve.
  margin-bottom: 0.2rem;

  input {
    width: 100%;
  }
}

.form-error {
  color: var(--error);
  font-size: 0.9rem;
  text-align: right;
  grid-column: -1 / 1;
}

// Styles for specific components.
.main-nav-background {
  background-color: var(--main-color);
}

.main-nav {
  display: flex;
  flex-direction: column;
  padding: 1rem 1rem;
  gap: 1rem;
  align-items: center;

  a,
  button {
    color: var(--off-white);
  }
}

.std-button {
  transition: background-color 0.1s ease-in-out;
  border-radius: var(--std-border-radius);
  &:hover {
    background-color: var(--grey);
  }
}

// This needs to be after main-nav so the color had be changed upon hover.
.nav-link {
  font-weight: 700;

  &:hover {
    filter: brightness(0.75);
  }
}

.directory-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
}

.directory-list__item-icon-container {
  display: grid;
  grid-template-rows: min-content 1fr;
  justify-items: center;
}

.directory-list__item {
  border: 3px solid var(--grey);
  border-radius: var(--std-border-radius);
  padding: 1rem;
  box-shadow: 5px 5px 5px 5px var(--shadow);

  button,
  .directory-list__item-icon-container {
    transition: background-color 0.1s ease-in-out;
    border-radius: var(--std-border-radius);
    &:hover {
      background-color: var(--grey);
    }
  }
}

.directory-list__folder__buttons,
.directory-list__file__buttons {
  display: flex;
  justify-content: right;
  align-items: center;
}

.directory-list__item-icon {
  width: 100px;
}

.header__title {
  margin: 0;
}

.folder-header {
  display: grid;
  grid-template-columns: 1fr max-content;
}

@media screen and (min-width: $desktop-breakpoint) {
  .main-nav {
    flex-direction: row;
  }

  .form-row {
    grid-template-columns: 1fr 1fr;
    gap: 0 var(--std-padding);
  }
}
